program main {
    var bool sample = false;
    var int baseport = 2827;

    addHardware("hw 1 2000", "Robotis", "/dev/ttyUSB0");
    addProtocol("pcol 2 50", "Robotis", "");

    linkHP("hw", "pcol");

    addController("miniCtrl 10 50", "Mini Leg", "walkPatterns/02_50_HA13.txt");

    addDevice("dLSP 5 250", "Robotis", "112  2.989   -1.0");
    addDevice("dLSR 5 250", "Robotis", "109  2.549   -1.0");
    addDevice("dLSY 5 250", "Robotis", "103  2.994    1.0");
    addDevice("dLEP 5 250", "Robotis", "86   2.631    1.0");
    addDevice("dRSP 5 250", "Robotis", "110  2.200    1.0");
    addDevice("dRSR 5 250", "Robotis", "100  2.615    1.0");
    addDevice("dRSY 5 250", "Robotis", "101  2.201   -1.0");
    addDevice("dREP 5 250", "Robotis", "89   2.559   -1.0");

    addDevice("dHY  5 250", "Robotis", "114  2.605   -1.0");
    addDevice("dLHY 5 250", "Robotis", "73   2.605   -1.0");
    addDevice("dLHR 5 250", "Robotis", "70   2.600    1.0");
    addDevice("dLHP 5 250", "Robotis", "71   2.605   -1.0");
    addDevice("dLKP 5 250", "Robotis", "111  4.146   -1.0");
    addDevice("dLAP 5 250", "Robotis", "107  2.605   -1.0");
    addDevice("dLAR 5 250", "Robotis", "108  2.600   -1.0");
    addDevice("dRHY 5 250", "Robotis", "72   2.621   -1.0");
    addDevice("dRHR 5 250", "Robotis", "95   2.528   -1.0");
    addDevice("dRHP 5 250", "Robotis", "96   2.631    1.0");
    addDevice("dRKP 5 250", "Robotis", "83   1.029    1.0");
    addDevice("dRAP 5 250", "Robotis", "78   2.590    1.0");
    addDevice("dRAR 5 250", "Robotis", "77   2.605   -1.0");

    addState("RSP 5 50", "Robotis", "Joint", sample, baseport);
    addState("RSR 5 50", "Robotis", "Joint", sample, baseport + 1);
    addState("RSY 5 50", "Robotis", "Joint", sample, baseport + 2);
    addState("REP 5 50", "Robotis", "Joint", sample, baseport + 3);
    addState("LSP 5 50", "Robotis", "Joint", sample, baseport + 4);
    addState("LSR 5 50", "Robotis", "Joint", sample, baseport + 5);
    addState("LSY 5 50", "Robotis", "Joint", sample, baseport + 6);
    addState("LEP 5 50", "Robotis", "Joint", sample, baseport + 7);
    addState("HY 5 50",  "Robotis", "Joint", sample, baseport + 8);
    addState("LHY 5 50", "Robotis", "Joint", sample, baseport + 9);
    addState("LHR 5 50", "Robotis", "Joint", sample, baseport + 10);
    addState("LHP 5 50", "Robotis", "Joint", sample, baseport + 11);
    addState("LKP 5 50", "Robotis", "Joint", sample, baseport + 12);
    addState("LAP 5 50", "Robotis", "Joint", sample, baseport + 13);
    addState("LAR 5 50", "Robotis", "Joint", sample, baseport + 14);
    addState("RHY 5 50", "Robotis", "Joint", sample, baseport + 15);
    addState("RHR 5 50", "Robotis", "Joint", sample, baseport + 16);
    addState("RHP 5 50", "Robotis", "Joint", sample, baseport + 17);
    addState("RKP 5 50", "Robotis", "Joint", sample, baseport + 18);
    addState("RAP 5 50", "Robotis", "Joint", sample, baseport + 19);
    addState("RAR 5 50", "Robotis", "Joint", sample, baseport + 20);

    linkPD("pcol", "dLSP"); linkDS("dLSP", "LSP");
    linkPD("pcol", "dLSR"); linkDS("dLSR", "LSR");
    linkPD("pcol", "dLSY"); linkDS("dLSY", "LSY");
    linkPD("pcol", "dLEP"); linkDS("dLEP", "LEP");
    linkPD("pcol", "dRSP"); linkDS("dRSP", "RSP");
    linkPD("pcol", "dRSR"); linkDS("dRSR", "RSR");
    linkPD("pcol", "dRSY"); linkDS("dRSY", "RSY");
    linkPD("pcol", "dREP"); linkDS("dREP", "REP");

    linkPD("pcol", "dHY"); linkDS("dHY",  "HY");
    linkPD("pcol", "dLHY"); linkDS("dLHY", "LHY");
    linkPD("pcol", "dLHR"); linkDS("dLHR", "LHR");
    linkPD("pcol", "dLHP"); linkDS("dLHP", "LHP");
    linkPD("pcol", "dLKP"); linkDS("dLKP", "LKP");
    linkPD("pcol", "dLAP"); linkDS("dLAP", "LAP");
    linkPD("pcol", "dLAR"); linkDS("dLAR", "LAR");
    linkPD("pcol", "dRHY"); linkDS("dRHY", "RHY");
    linkPD("pcol", "dRHR"); linkDS("dRHR", "RHR");
    linkPD("pcol", "dRHP"); linkDS("dRHP", "RHP");
    linkPD("pcol", "dRKP"); linkDS("dRKP", "RKP");
    linkPD("pcol", "dRAP"); linkDS("dRAP", "RAP");
    linkPD("pcol", "dRAR"); linkDS("dRAR", "RAR");

    linkSC("LSP", "miniCtrl");
    linkSC("LSR", "miniCtrl");
    linkSC("LSY", "miniCtrl");
    linkSC("LEP", "miniCtrl");
    linkSC("RSP", "miniCtrl");
    linkSC("RSR", "miniCtrl");
    linkSC("RSY", "miniCtrl");

    linkSC("REP", "miniCtrl");
    linkSC("HY",  "miniCtrl");
    linkSC("LHY", "miniCtrl");
    linkSC("LHR", "miniCtrl");
    linkSC("LHP", "miniCtrl");
    linkSC("LKP", "miniCtrl");
    linkSC("LAP", "miniCtrl");
    linkSC("LAR", "miniCtrl");
    linkSC("RHY", "miniCtrl");
    linkSC("RHR", "miniCtrl");
    linkSC("RHP", "miniCtrl");
    linkSC("RKP", "miniCtrl");
    linkSC("RAP", "miniCtrl");
    linkSC("RAR", "miniCtrl");

    //addLogger("flog 10 5", "File", "log.txt");
    //linkLS("flog", "LSP", "value");
    //linkLS("flog", "LSR", "value");
    //linkLS("flog", "RSP", "value");
    //linkLS("flog", "RSR", "value");
    //linkLS("flog", "HY",  "value");
    //linkLS("flog", "LHY", "value");
    //linkLS("flog", "LHR", "value");
    //linkLS("flog", "LHP", "value");
    //linkLS("flog", "LKP", "value");
    //linkLS("flog", "LAP", "value");
    //linkLS("flog", "LAR", "value");
    //linkLS("flog", "RHY", "value");
    //linkLS("flog", "RHR", "value");
    //linkLS("flog", "RHP", "value");
    //linkLS("flog", "RKP", "value");
    //linkLS("flog", "RAP", "value");
    //linkLS("flog", "RAR", "value");

    //Start the threads
    startHW();
    startProtocol();
    startDevice();
    startState();
    startLogger();
    startController();
}
