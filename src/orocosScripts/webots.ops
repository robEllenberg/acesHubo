program main {
    var bool sample = true;

    addHardware("wbHW 1 600", "Webots", "");
    addProtocol("wbPcol 2 600", "Webots", "");

    //addController("wbNull 10 15", "Mini Null", "");

    //***Pick one of these controllers
      //addController("wbctrl 10 15", "Mini Leg", "walkscripts/IKscript1.txt");
      //addController("wbArm 10 15", "Mini Arm", "sins.txt");
      //addController("wbctrl 10 15", "User Program", "miniProg.ops main");
      //addController("wbctrl 10 15", "User StateMachine", "miniSM.osd main");
      addController("wbctrl 10 15", "Mini Youngbum", "walkscripts/IKscript1.txt");

    linkHC("wbHW", "wbctrl");
    linkHP("wbHW", "wbPcol");

    addDevice("dHY 5 31", "Webots Joint",  "HY  0.0 -1.0");
    addDevice("dLSP 5 31", "Webots Joint", "LSP 0.0  1.0");
    addDevice("dLSR 5 31", "Webots Joint", "LSR 0.0  1.0");
    addDevice("dRSP 5 31", "Webots Joint", "RSP 0.0  1.0");
    addDevice("dRSR 5 31", "Webots Joint", "RSR 0.0  1.0");
    addDevice("dLHY 5 31", "Webots Joint", "LHY 0.0  1.0");
    addDevice("dLHR 5 31", "Webots Joint", "LHR 0.0  1.0");
    addDevice("dLHP 5 31", "Webots Joint", "LHP 0.0 -1.0");
    addDevice("dLKP 5 31", "Webots Joint", "LKP 0.0  1.0");
    addDevice("dLAP 5 31", "Webots Joint", "LAP 0.0 -1.0");
    addDevice("dLAR 5 31", "Webots Joint", "LAR 0.0  1.0");
    addDevice("dRHY 5 31", "Webots Joint", "RHY 0.0  1.0");
    addDevice("dRHR 5 31", "Webots Joint", "RHR 0.0 -1.0");
    addDevice("dRHP 5 31", "Webots Joint", "RHP 0.0 -1.0");
    addDevice("dRKP 5 31", "Webots Joint", "RKP 0.0  1.0");
    addDevice("dRAP 5 31", "Webots Joint", "RAP 0.0 -1.0");
    addDevice("dRAR 5 31", "Webots Joint", "RAR 0.0  1.0");

    addDevice("dGPS 5 31", "Webots GPS", "zero");
    addState("centerX 5 5",  "Webots", "X", sample);
    addState("centerY 5 5",  "Webots", "Y", sample);
    addState("centerZ 5 5",  "Webots", "Z", sample);

    linkPD("wbPcol", "dGPS");
    linkDS("dGPS", "centerX");
    linkDS("dGPS", "centerY");
    linkDS("dGPS", "centerZ");

    addDevice("dIMUAcc 5 31", "Webots Accelerometer", "imuacc");
    addState("imuaccX 5 5",  "Webots", "X", sample);
    addState("imuaccY 5 5",  "Webots", "Y", sample);
    addState("imuaccZ 5 5",  "Webots", "Z", sample);

    linkPD("wbPcol", "dIMUAcc");
    linkDS("dIMUAcc", "imuaccX");
    linkDS("dIMUAcc", "imuaccY");
    linkDS("dIMUAcc", "imuaccZ");

    addDevice("dIMUGyro 5 31", "Webots Gyro", "imugyro");
    addState("imugyroX 5 5",  "Webots", "X", sample);
    addState("imugyroY 5 5",  "Webots", "Y", sample);
    addState("imugyroZ 5 5",  "Webots", "Z", sample);

    linkPD("wbPcol", "dIMUGyro");
    linkDS("dIMUGyro", "imugyroX");
    linkDS("dIMUGyro", "imugyroY");
    linkDS("dIMUGyro", "imugyroZ");

    addDevice("dRFootForce 5 31", "Webots Force", "RFoot");
    addState("rffX 5 5",  "Webots", "X", sample);
    addState("rffY 5 5",  "Webots", "Y", sample);
    addState("rffZ 5 5",  "Webots", "Z", sample);
    linkPD("wbPcol", "dRFootForce");
    linkDS("dRFootForce", "rffX");
    linkDS("dRFootForce", "rffY");
    linkDS("dRFootForce", "rffZ");

    addDevice("dLFootForce 5 31", "Webots Force", "LFoot");
    addState("lffX 5 5",  "Webots", "X", sample);
    addState("lffY 5 5",  "Webots", "Y", sample);
    addState("lffZ 5 5",  "Webots", "Z", sample);
    linkPD("wbPcol", "dLFootForce");
    linkDS("dLFootForce", "lffX");
    linkDS("dLFootForce", "lffY");
    linkDS("dLFootForce", "lffZ");

    addState("HY 5 31",  "Webots", "Joint", sample);
    addState("LSP 5 31", "Webots", "Joint", sample);
    addState("LSR 5 31", "Webots", "Joint", sample);
    addState("RSP 5 31", "Webots", "Joint", sample);
    addState("RSR 5 31", "Webots", "Joint", sample);
    addState("LHY 5 31", "Webots", "Joint", sample);
    addState("LHR 5 31", "Webots", "Joint", sample);
    addState("LHP 5 31", "Webots", "Joint", sample);
    addState("LKP 5 31", "Webots", "Joint", sample);
    addState("LAP 5 31", "Webots", "Joint", sample);
    addState("LAR 5 31", "Webots", "Joint", sample);
    addState("RHY 5 31", "Webots", "Joint", sample);
    addState("RHR 5 31", "Webots", "Joint", sample);
    addState("RHP 5 31", "Webots", "Joint", sample);
    addState("RKP 5 31", "Webots", "Joint", sample);
    addState("RAP 5 31", "Webots", "Joint", sample);
    addState("RAR 5 31", "Webots", "Joint", sample);

    linkDS("dHY",  "HY"); linkPD("wbPcol", "dHY");
    linkPD("wbPcol", "dLSP"); linkDS("dLSP", "LSP");
    linkPD("wbPcol", "dLSR"); linkDS("dLSR", "LSR");
    linkPD("wbPcol", "dRSP"); linkDS("dRSP", "RSP");
    linkPD("wbPcol", "dRSR"); linkDS("dRSR", "RSR");
    linkPD("wbPcol", "dLHY"); linkDS("dLHY", "LHY");
    linkPD("wbPcol", "dLHR"); linkDS("dLHR", "LHR");
    linkPD("wbPcol", "dLHP"); linkDS("dLHP", "LHP");
    linkPD("wbPcol", "dLKP"); linkDS("dLKP", "LKP");
    linkPD("wbPcol", "dLAP"); linkDS("dLAP", "LAP");
    linkPD("wbPcol", "dLAR"); linkDS("dLAR", "LAR");
    linkPD("wbPcol", "dRHY"); linkDS("dRHY", "RHY");
    linkPD("wbPcol", "dRHR"); linkDS("dRHR", "RHR");
    linkPD("wbPcol", "dRHP"); linkDS("dRHP", "RHP");
    linkPD("wbPcol", "dRKP"); linkDS("dRKP", "RKP");
    linkPD("wbPcol", "dRAP"); linkDS("dRAP", "RAP");
    linkPD("wbPcol", "dRAR"); linkDS("dRAR", "RAR");

    linkSC("LSP", "wbctrl");
    linkSC("LSR", "wbctrl");
    linkSC("RSP", "wbctrl");
    linkSC("RSR", "wbctrl");
    linkSC("HY",  "wbctrl");
    linkSC("LHY", "wbctrl");
    linkSC("LHR", "wbctrl");
    linkSC("LHP", "wbctrl");
    linkSC("LKP", "wbctrl");
    linkSC("LAP", "wbctrl");
    linkSC("LAR", "wbctrl");
    linkSC("RHY", "wbctrl");
    linkSC("RHR", "wbctrl");
    linkSC("RHP", "wbctrl");
    linkSC("RKP", "wbctrl");
    linkSC("RAP", "wbctrl");
    linkSC("RAR", "wbctrl");

    linkSC("centerX", "wbctrl");
    linkSC("centerY", "wbctrl");
    linkSC("centerZ", "wbctrl");
    linkSC("imuaccX", "wbctrl");
    linkSC("imuaccY", "wbctrl");
    linkSC("imuaccZ", "wbctrl");
    linkSC("imugyroX", "wbctrl");
    linkSC("imugyroY", "wbctrl");
    linkSC("imugyroZ", "wbctrl");
    linkSC("rffX", "wbctrl");
    linkSC("rffY", "wbctrl");
    linkSC("rffZ", "wbctrl");
    linkSC("lffX", "wbctrl");
    linkSC("lffY", "wbctrl");
    linkSC("lffZ", "wbctrl");

    addLogger("flog 10 5", "File", "log.txt");
    
    linkLS("flog", "centerX", "value");
    linkLS("flog", "centerY", "value");
    linkLS("flog", "centerZ", "value");
    //linkLS("flog", "imuaccX", "value");
    //linkLS("flog", "imuaccY", "value");
    //linkLS("flog", "imuaccZ", "value");
    //linkLS("flog", "imugyroX", "value");
    //linkLS("flog", "imugyroY", "value");
    //linkLS("flog", "imugyroZ", "value");
    
    //linkLS("flog", "rffX", "value");
    //linkLS("flog", "rffY", "value");
    //linkLS("flog", "rffZ", "value");
    //linkLS("flog", "lffX", "value");
    //linkLS("flog", "lffY", "value");
    //linkLS("flog", "lffZ", "value");

    //linkLS("flog", "LSP", "value");
    //linkLS("flog", "LSR", "value");
    //linkLS("flog", "RSP", "value");
    //linkLS("flog", "RSR", "value");
    //linkLS("flog", "HY", "value");
    //linkLS("flog", "LHY", "value");
    //linkLS("flog", "LHR", "value");
    //linkLS("flog", "LHP", "value");
    //linkLS("flog", "LKP", "value");
    //linkLS("flog", "LAP", "value");
    //linkLS("flog", "LAR", "value");
    //linkLS("flog", "RHY", "value");
    //linkLS("flog", "RHR", "value");
    //linkLS("flog", "RHP", "value");
    //linkLS("flog", "RKP", "value");
    //linkLS("flog", "RAP", "value");
    //linkLS("flog", "RAR", "value");

    //Start the threads
    startHW();
    startProtocol();
    startDevice();
    startState();
    startLogger();
    startController();
}
